{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\LML-main\\\\frontend\\\\src\\\\components\\\\CodingLab\\\\ProblemDetail.jsx\",\n  _s = $RefreshSig$();\n// edtech-frontend/src/components/CodingLab/ProblemDetail.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport \"./ProblemDetail.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProblemDetail() {\n  _s();\n  var _problem$solutions;\n  const {\n    problemId\n  } = useParams();\n  const [problem, setProblem] = useState(null);\n  const [showSolution, setShowSolution] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(\"python\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProblem = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await axios.get(\n        // `http://localhost:5000/api/codingproblems/${problemId}`\n        `${process.env.REACT_APP_BASE_URL}/codingproblems/${problemId}`);\n        setProblem(response.data);\n        // Set default language if solutions exist\n        if (response.data && response.data.solutions && response.data.solutions.length > 0) {\n          setSelectedLanguage(response.data.solutions[0].language);\n        }\n      } catch (err) {\n        console.error(\"Error fetching problem details:\", err);\n        setError(\"Failed to load problem details. It might not exist.\");\n        setProblem(null); // Ensure problem is null on error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProblem();\n  }, [problemId]); // Re-fetch when problemId changes\n\n  // Derive current solution based on fetched problem and selected language\n  const currentSolution = problem === null || problem === void 0 ? void 0 : (_problem$solutions = problem.solutions) === null || _problem$solutions === void 0 ? void 0 : _problem$solutions.find(sol => sol.language === selectedLanguage);\n\n  // Helper function for topic intro (can remain client-side logic)\n  const getTopicIntro = topic => {\n    switch (topic) {\n      case \"Arrays\":\n        return \"Arrays are one of the most fundamental data structures, consisting of a collection of elements identified by index or key.\";\n      case \"Trees\":\n        return \"Trees are non-linear data structures with a hierarchical relationship between elements, often used to represent hierarchical data.\";\n      case \"Graphs\":\n        return \"Graphs are non-linear data structures consisting of nodes (vertices) and edges, representing relationships between entities.\";\n      case \"Linked Lists\":\n        return \"Linked lists are linear data structures where elements are stored at non-contiguous memory locations, linked by pointers.\";\n      case \"Queues\":\n        return \"Queues are linear data structures that follow the First-In, First-Out (FIFO) principle, where elements are added to the rear and removed from the front.\";\n      case \"Stacks\":\n        return \"Stacks are linear data structures that follow the Last-In, First-Out (LIFO) principle, where elements are added and removed from the top.\";\n      case \"Dynamic Programming\":\n        return \"Dynamic Programming is a method for solving complex problems by breaking them down into simpler subproblems.\";\n      default:\n        return \"Explore various data structures and algorithms to enhance your problem-solving skills.\";\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-detail-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading problem...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-detail-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"problem-not-found\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n  if (!problem) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-detail-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"problem-not-found\",\n        children: \"Problem not found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problem-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-link\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/coding-lab\",\n        className: \"back-to-lab\",\n        children: \"\\u2190 Back to Coding Lab\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: problem.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-tags\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `tag topic ${problem.topic.toLowerCase().replace(/\\s/g, \"-\")}`,\n          children: problem.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `tag level ${problem.level.toLowerCase()}`,\n          children: problem.level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"About \", problem.topic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTopicIntro(problem.topic)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Problem Statement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: problem.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), (problem.example_input || problem.example_output) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Examples\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), problem.example_input && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Example Input:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: problem.example_input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), problem.example_output && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example example-output\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Example Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: problem.example_output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solution-section\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowSolution(!showSolution),\n          className: \"solution-btn\",\n          children: showSolution ? \"Hide Solution\" : \"View Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), showSolution && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-viewer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-buttons\",\n          children: problem.solutions && problem.solutions.map(sol => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-btn ${selectedLanguage === sol.language ? \"active\" : \"\"}`,\n            onClick: () => setSelectedLanguage(sol.language),\n            children: sol.language.toUpperCase()\n          }, sol.language, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-block\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: currentSolution ? currentSolution.code : \"Solution not available for this language.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(ProblemDetail, \"YO7DRbUfmxdaEDWxVg10xmJuxZQ=\", false, function () {\n  return [useParams];\n});\n_c = ProblemDetail;\nvar _c;\n$RefreshReg$(_c, \"ProblemDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","jsxDEV","_jsxDEV","ProblemDetail","_s","_problem$solutions","problemId","problem","setProblem","showSolution","setShowSolution","selectedLanguage","setSelectedLanguage","loading","setLoading","error","setError","fetchProblem","response","get","process","env","REACT_APP_BASE_URL","data","solutions","length","language","err","console","currentSolution","find","sol","getTopicIntro","topic","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","title","toLowerCase","replace","level","description","example_input","example_output","onClick","map","toUpperCase","code","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/LML-main/frontend/src/components/CodingLab/ProblemDetail.jsx"],"sourcesContent":["// edtech-frontend/src/components/CodingLab/ProblemDetail.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"./ProblemDetail.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ProblemDetail() {\r\n  const { problemId } = useParams();\r\n  const [problem, setProblem] = useState(null);\r\n  const [showSolution, setShowSolution] = useState(false);\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"python\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProblem = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await axios.get(\r\n          // `http://localhost:5000/api/codingproblems/${problemId}`\r\n          `${process.env.REACT_APP_BASE_URL}/codingproblems/${problemId}`\r\n        );\r\n        setProblem(response.data);\r\n        // Set default language if solutions exist\r\n        if (\r\n          response.data &&\r\n          response.data.solutions &&\r\n          response.data.solutions.length > 0\r\n        ) {\r\n          setSelectedLanguage(response.data.solutions[0].language);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching problem details:\", err);\r\n        setError(\"Failed to load problem details. It might not exist.\");\r\n        setProblem(null); // Ensure problem is null on error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProblem();\r\n  }, [problemId]); // Re-fetch when problemId changes\r\n\r\n  // Derive current solution based on fetched problem and selected language\r\n  const currentSolution = problem?.solutions?.find(\r\n    (sol) => sol.language === selectedLanguage\r\n  );\r\n\r\n  // Helper function for topic intro (can remain client-side logic)\r\n  const getTopicIntro = (topic) => {\r\n    switch (topic) {\r\n      case \"Arrays\":\r\n        return \"Arrays are one of the most fundamental data structures, consisting of a collection of elements identified by index or key.\";\r\n      case \"Trees\":\r\n        return \"Trees are non-linear data structures with a hierarchical relationship between elements, often used to represent hierarchical data.\";\r\n      case \"Graphs\":\r\n        return \"Graphs are non-linear data structures consisting of nodes (vertices) and edges, representing relationships between entities.\";\r\n      case \"Linked Lists\":\r\n        return \"Linked lists are linear data structures where elements are stored at non-contiguous memory locations, linked by pointers.\";\r\n      case \"Queues\":\r\n        return \"Queues are linear data structures that follow the First-In, First-Out (FIFO) principle, where elements are added to the rear and removed from the front.\";\r\n      case \"Stacks\":\r\n        return \"Stacks are linear data structures that follow the Last-In, First-Out (LIFO) principle, where elements are added and removed from the top.\";\r\n      case \"Dynamic Programming\":\r\n        return \"Dynamic Programming is a method for solving complex problems by breaking them down into simpler subproblems.\";\r\n      default:\r\n        return \"Explore various data structures and algorithms to enhance your problem-solving skills.\";\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"problem-detail-container\">\r\n        <p>Loading problem...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"problem-detail-container\">\r\n        <p className=\"problem-not-found\">{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!problem) {\r\n    return (\r\n      <div className=\"problem-detail-container\">\r\n        <p className=\"problem-not-found\">Problem not found.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"problem-detail-container\">\r\n      <div className=\"back-link\">\r\n        <Link to=\"/coding-lab\" className=\"back-to-lab\">\r\n          &larr; Back to Coding Lab\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"problem-header\">\r\n        <h1>{problem.title}</h1>\r\n        <div className=\"problem-tags\">\r\n          {\" \"}\r\n          {/* Changed from problem-meta-tags */}\r\n          <span\r\n            className={`tag topic ${problem.topic\r\n              .toLowerCase()\r\n              .replace(/\\s/g, \"-\")}`}\r\n          >\r\n            {problem.topic}\r\n          </span>\r\n          <span className={`tag level ${problem.level.toLowerCase()}`}>\r\n            {problem.level}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"problem-content\">\r\n        <h2>About {problem.topic}</h2>\r\n        <p>{getTopicIntro(problem.topic)}</p>\r\n\r\n        <h2>Problem Statement</h2>\r\n        <p>{problem.description}</p>\r\n\r\n        {/* Display example inputs/outputs if they exist */}\r\n        {(problem.example_input || problem.example_output) && (\r\n          <div>\r\n            {\" \"}\r\n            {/* No specific class for the overall example section, just individual examples */}\r\n            <h2>Examples</h2>\r\n            {problem.example_input && (\r\n              <div className=\"example\">\r\n                <h3>Example Input:</h3>\r\n                <pre>{problem.example_input}</pre>\r\n              </div>\r\n            )}\r\n            {problem.example_output && (\r\n              <div className=\"example example-output\">\r\n                {\" \"}\r\n                {/* Added example-output class */}\r\n                <h3>Example Output:</h3>\r\n                <pre>{problem.example_output}</pre>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"solution-section\">\r\n          {\" \"}\r\n          {/* Added solution-section div */}\r\n          <button\r\n            onClick={() => setShowSolution(!showSolution)}\r\n            className=\"solution-btn\"\r\n          >\r\n            {showSolution ? \"Hide Solution\" : \"View Solution\"}\r\n          </button>\r\n        </div>\r\n\r\n        {showSolution && (\r\n          <div className=\"code-viewer\">\r\n            <div className=\"tab-buttons\">\r\n              {problem.solutions &&\r\n                problem.solutions.map((sol) => (\r\n                  <button\r\n                    key={sol.language}\r\n                    className={`tab-btn ${\r\n                      selectedLanguage === sol.language ? \"active\" : \"\"\r\n                    }`}\r\n                    onClick={() => setSelectedLanguage(sol.language)}\r\n                  >\r\n                    {sol.language.toUpperCase()}\r\n                  </button>\r\n                ))}\r\n            </div>\r\n            <div className=\"code-block\">\r\n              <pre>\r\n                <code>\r\n                  {currentSolution\r\n                    ? currentSolution.code\r\n                    : \"Solution not available for this language.\"}\r\n                </code>\r\n              </pre>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}