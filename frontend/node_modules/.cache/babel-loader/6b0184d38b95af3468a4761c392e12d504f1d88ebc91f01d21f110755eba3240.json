{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\LML-main\\\\frontend\\\\src\\\\components\\\\Courses\\\\CourseDetail.jsx\",\n  _s = $RefreshSig$();\n// edtech-frontend/src/components/Courses/CourseDetail.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FaDownload } from \"react-icons/fa\";\nimport \"./CourseDetail.css\";\nimport axios from \"axios\";\n\n// Helper function to get YouTube embed URL from various YouTube URLs\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getYouTubeEmbedUrl = videoUrl => {\n  if (!videoUrl) return \"\";\n\n  // Regex to extract video ID from various YouTube URL formats\n  const regExp = /(?:https?:\\/\\/)?(?:www\\.)?(?:m\\.)?(?:youtube\\.com|youtu\\.be)\\/(?:watch\\?v=|embed\\/|v\\/|)([\\w-]{11})(?:\\S+)?/;\n  const match = videoUrl.match(regExp);\n  if (match && match[1]) {\n    // Construct the embed URL with parameters for autoplay, controls, etc.\n    return `http://www.youtube.com/embed/${match[1]}?autoplay=1&controls=1&showinfo=0&rel=0`;\n    // autoplay=1: Starts video automatically\n    // controls=1: Shows player controls\n    // showinfo=0: Hides video title and uploader info\n    // rel=0: Prevents showing related videos at the end\n  }\n  // If it's not a recognizable YouTube URL, return an empty string\n  return \"\";\n};\nexport default function CourseDetail() {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n  const [courseTitle, setCourseTitle] = useState(\"Loading Course...\");\n  const [videos, setVideos] = useState([]);\n\n  // State for popup message\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n\n  // Function to show popup message\n  const showPopup = message => {\n    setPopupMessage(message);\n    setIsPopupVisible(true);\n    setTimeout(() => {\n      setIsPopupVisible(false);\n      setPopupMessage(\"\");\n    }, 3000); // Popup disappears after 3 seconds\n  };\n  useEffect(() => {\n    // Fetch course details\n    axios.get(`http://localhost:5000/api/courses/${courseId}`).then(res => {\n      setCourseTitle(res.data.title);\n    }).catch(err => {\n      console.error(\"Error fetching course details:\", err);\n      setCourseTitle(\"Course Not Found\");\n      showPopup(\"Failed to load course details.\");\n    });\n\n    // Fetch videos for the specific course\n    axios.get(`http://localhost:5000/api/courses/${courseId}/videos`).then(res => {\n      setVideos(res.data);\n      if (res.data.length > 0) {\n        setCurrentVideoIndex(0);\n      } else {\n        showPopup(\"No videos found for this course.\");\n      }\n    }).catch(err => {\n      console.error(\"Error fetching course videos:\", err);\n      showPopup(\"Failed to load course videos.\");\n    });\n  }, [courseId]);\n  const currentVideo = videos[currentVideoIndex];\n  const youtubeEmbedUrl = currentVideo ? getYouTubeEmbedUrl(currentVideo.url) : \"\";\n  const handleNextVideo = () => {\n    if (currentVideoIndex < videos.length - 1) {\n      setCurrentVideoIndex(currentVideoIndex + 1);\n      showPopup(\"Next video playing.\");\n    } else {\n      showPopup(\"You've reached the end of the course videos.\");\n    }\n  };\n  const handlePrevVideo = () => {\n    if (currentVideoIndex > 0) {\n      setCurrentVideoIndex(currentVideoIndex - 1);\n      showPopup(\"Previous video playing.\");\n    } else {\n      showPopup(\"This is the first video.\");\n    }\n  };\n  const handleDownloadPDF = () => {\n    if (currentVideo && currentVideo.pdf_url) {\n      // Check if pdf_url is already an absolute URL (starts with http/https)\n      // If not, prepend your backend base URL\n      const pdfToOpen = currentVideo.pdf_url.startsWith(\"http\") ? currentVideo.pdf_url : `http://localhost:5000${currentVideo.pdf_url.startsWith(\"/\") ? \"\" : \"/\"}${currentVideo.pdf_url}`;\n      window.open(pdfToOpen, \"_blank\");\n      showPopup(\"PDF download initiated.\");\n    } else {\n      showPopup(\"No PDF notes available for this video.\");\n    }\n  };\n  const handleMarkAsComplete = () => {\n    showPopup(\"Video marked as complete!\");\n    // TODO: Add logic to update completion status in backend (e.g., store user progress)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: courseTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-detail-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-section\",\n        children: currentVideo && youtubeEmbedUrl ?\n        /*#__PURE__*/\n        // Ensure a video is selected and its embed URL is valid\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: youtubeEmbedUrl,\n            title: currentVideo.title // For accessibility\n            ,\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true,\n            style: {\n              width: \"100%\",\n              aspectRatio: \"16/9\",\n              // Maintain 16:9 aspect ratio\n              borderRadius: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: currentVideo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentVideo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handlePrevVideo,\n                disabled: currentVideoIndex === 0,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleNextVideo,\n                disabled: currentVideoIndex === videos.length - 1,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), currentVideo && currentVideo.pdf_url && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDownloadPDF,\n              className: \"download-pdf-btn\",\n              children: [/*#__PURE__*/_jsxDEV(FaDownload, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 5\n              }, this), \" Download PDF\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleMarkAsComplete,\n              className: \"mark-complete-btn\",\n              children: \"Mark as Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: videos.length === 0 && courseTitle !== \"Loading Course...\" ? \"No videos available for this course.\" : \"Loading videos or video URL is invalid...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-list-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Course Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), videos.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"video-list-ul\",\n          children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `video-item ${index === currentVideoIndex ? \"active\" : \"\"}`,\n            onClick: () => setCurrentVideoIndex(index),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"video-number\",\n              children: [index + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), \" \", video.title]\n          }, video._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No video content to display.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), isPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-message\",\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(CourseDetail, \"oG4ihifSym+FUfoyU/EB/gLU2S0=\", false, function () {\n  return [useParams];\n});\n_c = CourseDetail;\nvar _c;\n$RefreshReg$(_c, \"CourseDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","FaDownload","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","getYouTubeEmbedUrl","videoUrl","regExp","match","CourseDetail","_s","courseId","currentVideoIndex","setCurrentVideoIndex","courseTitle","setCourseTitle","videos","setVideos","popupMessage","setPopupMessage","isPopupVisible","setIsPopupVisible","showPopup","message","setTimeout","get","then","res","data","title","catch","err","console","error","length","currentVideo","youtubeEmbedUrl","url","handleNextVideo","handlePrevVideo","handleDownloadPDF","pdf_url","pdfToOpen","startsWith","window","open","handleMarkAsComplete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","frameBorder","allow","allowFullScreen","style","width","aspectRatio","borderRadius","description","onClick","disabled","map","video","index","_id","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/LML-main/frontend/src/components/Courses/CourseDetail.jsx"],"sourcesContent":["// edtech-frontend/src/components/Courses/CourseDetail.jsx\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { FaDownload } from \"react-icons/fa\";\r\nimport \"./CourseDetail.css\";\r\nimport axios from \"axios\";\r\n\r\n// Helper function to get YouTube embed URL from various YouTube URLs\r\nconst getYouTubeEmbedUrl = (videoUrl) => {\r\n  if (!videoUrl) return \"\";\r\n\r\n  // Regex to extract video ID from various YouTube URL formats\r\n  const regExp =\r\n    /(?:https?:\\/\\/)?(?:www\\.)?(?:m\\.)?(?:youtube\\.com|youtu\\.be)\\/(?:watch\\?v=|embed\\/|v\\/|)([\\w-]{11})(?:\\S+)?/;\r\n  const match = videoUrl.match(regExp);\r\n\r\n  if (match && match[1]) {\r\n    // Construct the embed URL with parameters for autoplay, controls, etc.\r\n    return `http://www.youtube.com/embed/${match[1]}?autoplay=1&controls=1&showinfo=0&rel=0`;\r\n    // autoplay=1: Starts video automatically\r\n    // controls=1: Shows player controls\r\n    // showinfo=0: Hides video title and uploader info\r\n    // rel=0: Prevents showing related videos at the end\r\n  }\r\n  // If it's not a recognizable YouTube URL, return an empty string\r\n  return \"\";\r\n};\r\n\r\nexport default function CourseDetail() {\r\n  const { courseId } = useParams();\r\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\r\n  const [courseTitle, setCourseTitle] = useState(\"Loading Course...\");\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  // State for popup message\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n\r\n  // Function to show popup message\r\n  const showPopup = (message) => {\r\n    setPopupMessage(message);\r\n    setIsPopupVisible(true);\r\n    setTimeout(() => {\r\n      setIsPopupVisible(false);\r\n      setPopupMessage(\"\");\r\n    }, 3000); // Popup disappears after 3 seconds\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch course details\r\n    axios\r\n      .get(`http://localhost:5000/api/courses/${courseId}`)\r\n      .then((res) => {\r\n        setCourseTitle(res.data.title);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching course details:\", err);\r\n        setCourseTitle(\"Course Not Found\");\r\n        showPopup(\"Failed to load course details.\");\r\n      });\r\n\r\n    // Fetch videos for the specific course\r\n    axios\r\n      .get(`http://localhost:5000/api/courses/${courseId}/videos`)\r\n      .then((res) => {\r\n        setVideos(res.data);\r\n        if (res.data.length > 0) {\r\n          setCurrentVideoIndex(0);\r\n        } else {\r\n          showPopup(\"No videos found for this course.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching course videos:\", err);\r\n        showPopup(\"Failed to load course videos.\");\r\n      });\r\n  }, [courseId]);\r\n\r\n  const currentVideo = videos[currentVideoIndex];\r\n  const youtubeEmbedUrl = currentVideo\r\n    ? getYouTubeEmbedUrl(currentVideo.url)\r\n    : \"\";\r\n\r\n  const handleNextVideo = () => {\r\n    if (currentVideoIndex < videos.length - 1) {\r\n      setCurrentVideoIndex(currentVideoIndex + 1);\r\n      showPopup(\"Next video playing.\");\r\n    } else {\r\n      showPopup(\"You've reached the end of the course videos.\");\r\n    }\r\n  };\r\n\r\n  const handlePrevVideo = () => {\r\n    if (currentVideoIndex > 0) {\r\n      setCurrentVideoIndex(currentVideoIndex - 1);\r\n      showPopup(\"Previous video playing.\");\r\n    } else {\r\n      showPopup(\"This is the first video.\");\r\n    }\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    if (currentVideo && currentVideo.pdf_url) {\r\n      // Check if pdf_url is already an absolute URL (starts with http/https)\r\n      // If not, prepend your backend base URL\r\n      const pdfToOpen = currentVideo.pdf_url.startsWith(\"http\")\r\n        ? currentVideo.pdf_url\r\n        : `http://localhost:5000${\r\n            currentVideo.pdf_url.startsWith(\"/\") ? \"\" : \"/\"\r\n          }${currentVideo.pdf_url}`;\r\n      window.open(pdfToOpen, \"_blank\");\r\n      showPopup(\"PDF download initiated.\");\r\n    } else {\r\n      showPopup(\"No PDF notes available for this video.\");\r\n    }\r\n  };\r\n\r\n  const handleMarkAsComplete = () => {\r\n    showPopup(\"Video marked as complete!\");\r\n    // TODO: Add logic to update completion status in backend (e.g., store user progress)\r\n  };\r\n\r\n  return (\r\n    <div className=\"course-detail-container\">\r\n      <h1>{courseTitle}</h1>\r\n\r\n      <div className=\"course-detail-content\">\r\n        <div className=\"video-section\">\r\n          {currentVideo && youtubeEmbedUrl ? ( // Ensure a video is selected and its embed URL is valid\r\n            <>\r\n              {/* Using <iframe> for YouTube video embedding */}\r\n              <iframe\r\n                src={youtubeEmbedUrl}\r\n                title={currentVideo.title} // For accessibility\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n                style={{\r\n                  width: \"100%\",\r\n                  aspectRatio: \"16/9\", // Maintain 16:9 aspect ratio\r\n                  borderRadius: \"8px\",\r\n                }}\r\n              ></iframe>\r\n              <div className=\"video-description\">\r\n                <h2>{currentVideo.title}</h2>\r\n                <p>{currentVideo.description}</p>\r\n              </div>\r\n              <div className=\"video-controls\">\r\n                <div className=\"nav-buttons\">\r\n                  <button\r\n                    onClick={handlePrevVideo}\r\n                    disabled={currentVideoIndex === 0}\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                  <button\r\n                    onClick={handleNextVideo}\r\n                    disabled={currentVideoIndex === videos.length - 1}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                {/* <button\r\n                  onClick={handleDownloadPDF}\r\n                  className=\"download-pdf-btn\"\r\n                  disabled={!currentVideo || !currentVideo.pdf_url}\r\n                >\r\n                  <FaDownload /> Download PDF\r\n                </button> */}\r\n\r\n                {currentVideo && currentVideo.pdf_url && (\r\n  <button onClick={handleDownloadPDF} className=\"download-pdf-btn\">\r\n    <FaDownload /> Download PDF\r\n  </button>\r\n)}\r\n\r\n                <button\r\n                  onClick={handleMarkAsComplete}\r\n                  className=\"mark-complete-btn\"\r\n                >\r\n                  Mark as Complete\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>\r\n              {videos.length === 0 && courseTitle !== \"Loading Course...\"\r\n                ? \"No videos available for this course.\"\r\n                : \"Loading videos or video URL is invalid...\"}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"video-list-section\">\r\n          <h2>Course Content</h2>\r\n          {videos.length > 0 ? (\r\n            <ul className=\"video-list-ul\">\r\n              {videos.map((video, index) => (\r\n                <li\r\n                  key={video._id}\r\n                  className={`video-item ${\r\n                    index === currentVideoIndex ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => setCurrentVideoIndex(index)}\r\n                >\r\n                  <span className=\"video-number\">{index + 1}.</span>{\" \"}\r\n                  {video.title}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No video content to display.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {isPopupVisible && <div className=\"popup-message\">{popupMessage}</div>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}